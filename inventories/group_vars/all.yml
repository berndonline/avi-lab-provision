---
avi_username: admin
avi_password: test456!
avi_default_password: test123!
avi_change_password: false

controller_ips: [10.255.1.177, 10.255.1.68, 10.255.1.32]

dns_servers: [10.255.1.1]
dns_domain: domain.com
ntp_servers: [0.us.pool.ntp.org, 1.us.pool.ntp.org]

api_version: 17.2.11

con_deploy_type: docker
con_package_deploy: true # For local installation - default set to false and uses docker hub image
con_package_source: ~/avi-images/controller_docker.tgz # Point to the right AVI image folder
con_package_dest: /tmp/controller_docker.tgz
con_cores: 2
con_memory_gb: "{{ ansible_memtotal_mb // 1024 }}"
con_disk_gb: 10
con_controller_ip: "{{ ansible_default_ipv4.address }}"
# con_setup_json: ~/avi-images/setup.json # Base config for AVI Controller - moved to host_vars only needed for 1st controller
con_fresh_install: false # Removes config and does clean install - requires that AVI controller is installed otherwise fails
con_force_deploy: false # Reploys Docker container without deleting config

se_deploy_type: docker
se_autoregister: true
se_master_ctl_ip: "{{ hostvars['avi-controller-1'].ansible_ssh_host }}"
se_master_ctl_username: admin
se_master_ctl_password: test123!
se_cloud_name: Default-Cloud
se_tenant: admin
se_package_deploy: true # For local installation - default set to false and uses docker hub image
se_package_source: ~/avi-images/se_docker.tgz # Point to the right AVI image folder
se_package_dest: /tmp/se_docker.tgz
se_dpdk: false
se_inband_mgmt: true
se_cores: "{{ ansible_processor_cores * ansible_processor_count }}"
se_memory_gb: "{{ ansible_memtotal_mb / 1024 }}"
se_disk_path: "{{ se_destination_disk }}opt/avi/se/data"
se_disk_gb: 10
se_fresh_install: false # Removes config and does clean install - requires that AVI SE is installed otherwise fails
